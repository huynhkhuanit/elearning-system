/**
 * Helper Script: L·∫•y Lesson IDs t·ª´ API
 * 
 * C√°ch s·ª≠ d·ª•ng:
 * 1. M·ªü DevTools (F12) tr√™n m·ªôt trang learn course
 * 2. Copy to√†n b·ªô code n√†y v√†o Console
 * 3. Script s·∫Ω in ra t·∫•t c·∫£ lesson IDs v·ªõi format chu·∫©n JSON
 * 
 * V√≠ d·ª• output:
 * {
 *   "lesson-id-1": { "title": "B√†i 1", "content": "" },
 *   "lesson-id-2": { "title": "B√†i 2", "content": "" },
 * }
 */

(async function getLessonIds() {
  try {
    // L·∫•y URL t·ª´ current page
    const slug = window.location.pathname.split('/').pop();
    
    if (!slug) {
      console.error('‚ùå Kh√¥ng t√¨m th·∫•y course slug t·ª´ URL');
      return;
    }
    
    console.log(`üìö ƒêang fetch chapters cho course: ${slug}`);
    
    // Fetch chapters data
    const response = await fetch(`/api/courses/${slug}/chapters`, {
      credentials: 'include'
    });
    
    if (!response.ok) {
      throw new Error(`API error: ${response.status}`);
    }
    
    const data = await response.json();
    
    if (!data.success) {
      throw new Error(data.message || 'API returned error');
    }
    
    // X·ª≠ l√Ω d·ªØ li·ªáu v√† t·∫°o template JSON
    const lessons = {};
    const chapters = data.data.chapters;
    
    chapters.forEach(chapter => {
      if (chapter.lessons && Array.isArray(chapter.lessons)) {
        chapter.lessons.forEach(lesson => {
          lessons[lesson.id] = {
            title: lesson.title || 'Untitled',
            content: '# ' + (lesson.title || 'Untitled') + '\n\n(Th√™m n·ªôi dung markdown ·ªü ƒë√¢y...)'
          };
        });
      }
    });
    
    // In ra format JSON s·∫°ch
    console.log('‚úÖ Copy JSON d∆∞·ªõi ƒë√¢y v√† paste v√†o public/data/lessonContent.json:');
    console.log('');
    console.log(JSON.stringify({ lessons }, null, 2));
    console.log('');
    console.log('üìù T·ªïng s·ªë b√†i h·ªçc:', Object.keys(lessons).length);
    
    // C≈©ng log ra CSV format ƒë·ªÉ d·ªÖ tracking
    console.log('');
    console.log('üìã Format CSV (ƒë·ªÉ tracking):');
    console.log('Lesson ID | Title');
    console.log('-'.repeat(80));
    Object.entries(lessons).forEach(([id, lesson]) => {
      console.log(`${id} | ${lesson.title}`);
    });
    
  } catch (error) {
    console.error('‚ùå L·ªói:', error.message);
  }
})();
